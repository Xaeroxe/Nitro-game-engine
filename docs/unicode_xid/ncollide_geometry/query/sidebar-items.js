initSidebarItems({"enum":[["Proximity","Proximity information."]],"fn":[["contact","Computes one contact point between two shapes."],["distance","Computes the minimum distance separating two shapes."],["proximity","Tests whether two shapes are in intersecting or separated by a distance smaller than `margin`."],["time_of_impact","Computes the smallest time of impact of two shapes under translational movement."]],"mod":[["algorithms","Algorithms needed for distance and penetration depth computation."],["contacts_internal","Implementation details of the `contact` and `contacts` functions."],["distance_internal","Implementation details of the `distance` function."],["point_internal","Point inclusion and projection."],["proximity_internal","Implementation details of the `proximity` function."],["ray_internal","Ray-casting related definitions and implementations."],["time_of_impact_internal","Implementation details of the `time_of_impact` function."]],"struct":[["Contact","Geometric description of a contact."],["PointInterferencesCollector","Bounding Volume Tree visitor collecting nodes that may contain a given point."],["PointProjection","Description of the projection of a point on a shape."],["Ray","A Ray."],["RayInterferencesCollector","Bounding Volume Tree visitor collecting interferences with a given ray."],["RayIntersection","Structure containing the result of a successful ray cast."],["RayIntersectionCostFn","A search thet selects the objects that has the smallest time of impact with a given ray."]],"trait":[["PointQuery","Trait of objects that can be tested for point inclusion and projection."],["RayCast","Traits of objects which can be transformed and tested for intersection with a ray."]],"type":[["Ray2","A 2D ray."],["Ray3","A 3D ray."],["RayIntersection2","A 2D ray intersection."],["RayIntersection3","A 3D ray intersection."]]});