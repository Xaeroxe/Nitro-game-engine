initSidebarItems({"struct":[["BallBallContactGenerator","Collision detector between two balls."],["BallBallProximityDetector","Proximity detector between two balls."],["CompositeShapeShapeContactGenerator","Collision detector between a concave shape and another shape."],["CompositeShapeShapeProximityDetector","Proximity detector between a concave shape and another shape."],["ContactPairs","Iterator through contact pairs."],["ContactSignal","Signal for contact start/stop."],["Contacts","An iterator through contacts."],["DefaultContactDispatcher","Collision dispatcher for shapes defined by `ncollide_entities`."],["DefaultNarrowPhase","Collision detector dispatcher for collision objects."],["DefaultProximityDispatcher","Proximity dispatcher for shapes defined by `ncollide_entities`."],["IncrementalContactManifoldGenerator","Contact manifold generator which keeps track of several contacts."],["OneShotContactManifoldGenerator","Contact manifold generator producing a full manifold at the first update."],["PlaneSupportMapContactGenerator","Collision detector between a plane and a shape implementing the `SupportMap` trait."],["PlaneSupportMapProximityDetector","Proximity detector between a plane and a shape implementing the `SupportMap` trait."],["ProximityPairs","Iterator through proximity pairs."],["ProximitySignal","Signal for proximity start/stop."],["ShapeCompositeShapeContactGenerator","Collision detector between a shape and a concave shape."],["ShapeCompositeShapeProximityDetector","Proximity detector between a shape and a concave shape."],["SupportMapPlaneContactGenerator","Collision detector between a plane and a shape implementing the `SupportMap` trait."],["SupportMapPlaneProximityDetector","Proximity detector between a plane and a shape implementing the `SupportMap` trait."],["SupportMapSupportMapContactGenerator","Persistent collision detector between two shapes having a support mapping function."],["SupportMapSupportMapProximityDetector","Persistent proximity detector between two shapes having a support mapping function."]],"trait":[["ContactDispatcher",""],["ContactGenerator","Trait implemented algorithms that compute contact points, normals and penetration depths."],["ContactHandler","A signal handler for contact detection."],["NarrowPhase","Trait implemented by the narrow phase manager."],["ProximityDetector","Trait implemented by algorithms that determine if two objects are in close proximity."],["ProximityDispatcher",""],["ProximityHandler","A signal handler for proximity detection."]],"type":[["ContactAlgorithm",""],["ContactAlgorithm2","Trait-object for 2-dimensional contact generation."],["ContactAlgorithm3","Trait-object for 3-dimensional contact generation."],["ProximityAlgorithm",""]]});